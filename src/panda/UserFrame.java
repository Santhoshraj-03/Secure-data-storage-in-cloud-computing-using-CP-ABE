/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package panda;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileWriter;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.security.SignatureException;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;
import java.util.Vector;
import javax.crypto.Mac;
import javax.crypto.spec.SecretKeySpec;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Elcot
 */
public class UserFrame extends javax.swing.JFrame {

    /**
     * Creates new form UserFrame
     */
    String name, groupno, usertype, pubkeys, privkeys, filename, datafile, filepath, fn3, cloudid;
    DBConnection dbn = new DBConnection();
    Statement st = dbn.stt;
    ArrayList path = new ArrayList();
    int au = 0, fc = 0, fc1 = 0, attacker = 0;
    String gd, cd;

    public UserFrame(String na, String gn, String ut, String id) {
        initComponents();
        name = na;
        groupno = gn;
        usertype = ut;
        cloudid = id;
        showGroupMembers();
    }

    public final void showGroupMembers() {
        jLabel2.setText("Welcome " + name);
        jLabel3.setText("Group No: " + groupno);
        jLabel4.setText("User Type: " + usertype);
        jLabel9.setText("Cloud Id: " + cloudid);

        if (usertype.equals("Group User")) {
            jTabbedPane1.setEnabledAt(0, false);
            jTabbedPane1.setEnabledAt(1, false);
            jTabbedPane1.setEnabledAt(3, false);
            jTabbedPane1.setEnabledAt(4, false);
        }

        try {
            ResultSet rs1 = st.executeQuery(
                    "select * from UserRegister where GroupNo='" + groupno + "' and  CloudId='" + cloudid + "'");
            while (rs1.next()) {
                String emailid = rs1.getString(1);
                String pwd = rs1.getString(2);
                String name1 = rs1.getString(3);
                String groupno1 = rs1.getString(4);
                String usertype1 = rs1.getString(5);

                DefaultTableModel dm = (DefaultTableModel) jTable1.getModel();
                Vector v = new Vector();
                v.add(emailid);
                v.add(pwd);
                v.add(name1);
                v.add(groupno1);
                v.add(usertype1);
                dm.addRow(v);
            }

            ResultSet rs2 = st.executeQuery(
                    "select * from RevockedUser where BlockedBy='" + name + "' and CloudId='" + cloudid + "'");
            while (rs2.next()) {
                String username = rs2.getString(1);
                String privtry = rs2.getString(2);
                jComboBox1.addItem(username);

                DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
                Vector v = new Vector();
                v.add(username);
                v.add(privtry);
                dm.addRow(v);
            }

            ResultSet rs = st.executeQuery("select * from GroupsCount");
            while (rs.next()) {
                String clouid = rs.getString(2);
                jComboBox2.addItem(clouid);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel9 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jButton8 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButton9 = new javax.swing.JButton();
        jTextField3 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        jComboBox4 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton19 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jButton21 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jButton22 = new javax.swing.JButton();
        jButton23 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel1.setText("User Frame");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "EmailId", "Password", "Name", "Group No", "UserType"
                }));
        jScrollPane1.setViewportView(jTable1);

        jLabel9.setText("Cloud Id:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(41, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 569,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(233, 233, 233)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 129,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap(30, Short.MAX_VALUE)
                                .addComponent(jLabel9)
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 167,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)));

        jTabbedPane1.addTab("View Group Members", jPanel2);

        jLabel5.setText("Enter the File Name:");

        jButton1.setText("Key Generation");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton2.setText("Browse");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Encrypt with Signature");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Upload");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setText("Split File into blocks");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel3Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane2)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jLabel5)
                                                .addGap(18, 18, 18)
                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 266,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(29, 29, 29)
                                .addGroup(jPanel3Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(30, Short.MAX_VALUE)));
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addComponent(jButton1)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton6)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton3)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton4)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton5))
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 196,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(25, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Upload", jPanel3);

        jLabel6.setText("Enter File Name:");

        jButton8.setText("Download");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane3.setViewportView(jTextArea2);

        jButton9.setText("Get Private Key");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jLabel7.setText("Private Key");

        jButton10.setText("Decrypt");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jButton11.setText("Clear");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(38, 38, 38)
                                .addGroup(jPanel4Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jLabel6)
                                                .addGap(32, 32, 32)
                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 227,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(42, 42, 42)
                                .addGroup(jPanel4Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 174,
                                                Short.MAX_VALUE)
                                        .addComponent(jTextField3)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addGap(55, 55, 55)
                                                .addComponent(jLabel7))
                                        .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addContainerGap(41, Short.MAX_VALUE)));
        jPanel4Layout.setVerticalGroup(
                jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel6)
                                        .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton8))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel4Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 180,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel4Layout.createSequentialGroup()
                                                .addComponent(jButton9)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jButton10)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton11)))
                                .addContainerGap(32, Short.MAX_VALUE)));

        jTabbedPane1.addTab("Download", jPanel4);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
                new Object[][] {

                },
                new String[] {
                        "User Name", "Private Keys Tried"
                }));
        jScrollPane4.setViewportView(jTable2);

        jLabel8.setText("Choose user name for unrevoked:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<--Select-->" }));

        jButton12.setText("UnRevoke");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Clear");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 360,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel5Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                                jPanel5Layout.createSequentialGroup()
                                                        .addGap(63, 63, 63)
                                                        .addComponent(jComboBox1,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE, 159,
                                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(27, 27, 27)
                                                .addGroup(jPanel5Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                                .addComponent(jButton12)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addComponent(jButton13))
                                                        .addComponent(jLabel8))))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));
        jPanel5Layout.setVerticalGroup(
                jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(36, 36, 36)
                                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 202,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jPanel5Layout.createSequentialGroup()
                                                .addGap(59, 59, 59)
                                                .addComponent(jLabel8)
                                                .addGap(18, 18, 18)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(31, 31, 31)
                                                .addGroup(jPanel5Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton12)
                                                        .addComponent(jButton13))))
                                .addContainerGap(40, Short.MAX_VALUE)));

        jTabbedPane1.addTab("View Revocked Users", jPanel5);

        jLabel10.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel10.setText("Data Sharing for another Group Member");

        jLabel11.setText("Choose Cloud Id:");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<--Select-->" }));
        jComboBox2.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox2ItemStateChanged(evt);
            }
        });
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jLabel12.setText("Choose Group Id:");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<--Select-->" }));
        jComboBox3.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox3ItemStateChanged(evt);
            }
        });
        jComboBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox3ActionPerformed(evt);
            }
        });

        jLabel13.setText("Choose Member Name:");

        jComboBox4.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<--Select-->" }));
        jComboBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox4ActionPerformed(evt);
            }
        });

        jLabel14.setText("Enter the File Name:");

        jButton14.setText("Browse");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setText("Key Generation");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jScrollPane5.setViewportView(jTextArea3);

        jButton16.setText("Split File into Blocks");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setText("Encrypt with Signature");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jButton18.setText("Upload");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton19.setText("Clear");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGap(127, 127, 127)
                                                .addComponent(jLabel10))
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGap(32, 32, 32)
                                                .addGroup(jPanel6Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                .addComponent(jLabel14)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jTextField4,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 201,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addComponent(jButton14,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                        Short.MAX_VALUE)
                                                                .addPreferredGap(
                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jButton15))
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                .addComponent(jLabel11)
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel6Layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                .addComponent(jComboBox2,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        163,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addGap(18, 18, 18)
                                                                                .addComponent(jLabel12)
                                                                                .addPreferredGap(
                                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(jComboBox3,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        170,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                .addComponent(jLabel13)
                                                                                .addGap(34, 34, 34)
                                                                                .addComponent(jComboBox4,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        145,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                .addComponent(jScrollPane5,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 331,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addGap(18, 18, 18)
                                                                .addGroup(jPanel6Layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING)
                                                                        .addComponent(jButton16,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addComponent(jButton17,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                                                .addComponent(jButton18,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                        116,
                                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                                .addPreferredGap(
                                                                                        javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                                .addComponent(jButton19,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                        Short.MAX_VALUE)))))))
                                .addContainerGap(39, Short.MAX_VALUE)));
        jPanel6Layout.setVerticalGroup(
                jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel11)
                                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel12)
                                        .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel13)
                                        .addComponent(jComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel14)
                                        .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton14)
                                        .addComponent(jButton15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel6Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 119,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addComponent(jButton16)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jButton17)
                                                .addGap(18, 18, 18)
                                                .addGroup(jPanel6Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                        .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                35, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(15, 15, 15)));

        jTabbedPane1.addTab("Data Sharing", jPanel6);

        jLabel15.setFont(new java.awt.Font("Algerian", 0, 18)); // NOI18N
        jLabel15.setText("Download another group member shared data");

        jLabel16.setText("Enter File Name:");

        jButton20.setText("Download");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jScrollPane6.setViewportView(jTextArea4);

        jButton21.setText("Get Private Key");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jLabel17.setText("Private Key");

        jButton22.setText("Decrypt");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        jButton23.setText("Clear");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(64, 64, 64)
                                                .addComponent(jLabel15))
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addGap(35, 35, 35)
                                                .addGroup(jPanel7Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING,
                                                                false)
                                                        .addComponent(jScrollPane6)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addComponent(jLabel16)
                                                                .addGap(32, 32, 32)
                                                                .addComponent(jTextField5,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE, 227,
                                                                        javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGroup(jPanel7Layout
                                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addGap(42, 42, 42)
                                                                .addGroup(jPanel7Layout.createParallelGroup(
                                                                        javax.swing.GroupLayout.Alignment.LEADING,
                                                                        false)
                                                                        .addComponent(jButton20,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addComponent(jButton21,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addComponent(jTextField6)
                                                                        .addComponent(jButton22,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                                                Short.MAX_VALUE)
                                                                        .addComponent(jButton23,
                                                                                javax.swing.GroupLayout.Alignment.TRAILING,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE,
                                                                                174,
                                                                                javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                                .addGap(92, 92, 92)
                                                                .addComponent(jLabel17)))))
                                .addContainerGap(44, Short.MAX_VALUE)));
        jPanel7Layout.setVerticalGroup(
                jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel7Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18,
                                        Short.MAX_VALUE)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel16)
                                        .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton20))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel7Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel7Layout.createSequentialGroup()
                                                .addComponent(jButton21)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton22)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jButton23))
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 161,
                                                javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)));

        jTabbedPane1.addTab("Receive", jPanel7);

        jButton7.setText("LogOut");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(39, 39, 39)
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655,
                                                javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 250,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 182,
                                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addContainerGap(33, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(256, 256, 256)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton7)
                                .addGap(45, 45, 45)));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(jButton7))
                                .addGap(35, 35, 35)
                                .addGroup(jPanel1Layout
                                        .createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING,
                                                javax.swing.GroupLayout.DEFAULT_SIZE, 21, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35,
                                        Short.MAX_VALUE)
                                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 308,
                                        javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING,
                                javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                                Short.MAX_VALUE));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fc = new JFileChooser();
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                jTextField1.setText(file.getName());
                filename = file.getName();
                filepath = file.getAbsolutePath();

                String fname = file.getAbsolutePath();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str = new String(data);
                datafile = str;
                jTextArea1.setText(str);
            } else if (result == JFileChooser.CANCEL_OPTION) {
                JOptionPane.showMessageDialog(this, "Open Command cancelled by user.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton2ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText("");
        jTextArea1.setText("");
    }// GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int size = 32;

        Random rnd = new Random();
        BigInteger p = BigInteger.probablePrime(size / 2, rnd);
        BigInteger q = p.nextProbablePrime();
        BigInteger n = p.multiply(q);
        BigInteger m = (p.subtract(BigInteger.ONE)).multiply(q.subtract(BigInteger.ONE));
        BigInteger e = getCoprime(m);
        BigInteger d = e.modInverse(m);

        System.out.println("p: " + p);
        System.out.println("q: " + q);
        System.out.println("m: " + m);
        System.out.println("Key size: " + n.bitLength());
        System.out.println("Modulus: " + n);
        System.out.println("Public key: " + e);
        System.out.println("Private key: " + d);

        pubkeys = e.toString() + "," + n.toString();
        privkeys = d.toString() + "," + n.toString();

        try {
            ResultSet rs = st.executeQuery(
                    "select * from KeyDetails where FileName='" + filename + "' and CloudId='" + cloudid + "'");
            if (rs.next()) {

            } else {
                st.executeUpdate("insert into KeyDetails values('" + filename + "','" + pubkeys + "','" + privkeys
                        + "','" + name + "','" + groupno + "','" + cloudid + "')");
            }
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        JOptionPane.showMessageDialog(new JFrame(),
                "Keys are Generated & forward to its group members and public verifier Successfully!");
    }// GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        String disp = "";
        try {
            String[] s = pubkeys.split(",");
            String e = s[0];
            String n = s[1];

            for (int p = 0; p < path.size(); p++) {
                String fname = path.get(p).toString();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str1 = new String(data);

                String blockname = fe.getName();

                // Encrypt File

                String ce = "";
                char ch[] = str1.toCharArray();
                for (int i = 0; i < ch.length; i++) {
                    char c = ch[i];
                    System.out.println((int) c);
                    BigInteger orig = BigInteger.valueOf((int) c);
                    String ci = orig.modPow(new BigInteger(e), new BigInteger(n)).toString();
                    ce = ce + ci + ",";
                }
                String cipfile = ce.substring(0, ce.lastIndexOf(','));

                // Signature Generation

                Signature sg = new Signature();
                String sign = sg.calculateRFC2104HMAC(str1, "key");
                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + blockname + "\n------------------------------------------------------------\n" + cipfile
                        + "\nSignature: " + sign + "\n\n";

                try {
                    ResultSet rs = st.executeQuery("select * from UploadDetails where BlockName='" + blockname
                            + "' and CloudId='" + cloudid + "'");
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(new JFrame(), "This block is already exists!");
                    } else {
                        st.executeUpdate(
                                "insert into UploadDetails values('" + name + "','" + groupno + "','" + filename + "','"
                                        + blockname + "','" + cipfile + "','" + sign + "','" + cloudid + "')");
                        au++;
                    }
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String display = disp.substring(0, disp.lastIndexOf('\n'));
        jTextArea1.setText(display);
    }// GEN-LAST:event_jButton3ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        String pa = filepath;
        split(pa);

        String disp = "";
        try {
            for (int p = 0; p < path.size(); p++) {
                String fname = path.get(p).toString();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str1 = new String(data);
                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + fe.getName() + "\n------------------------------------------------------------\n" + str1
                        + "\n\n";
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String display = disp.substring(0, disp.lastIndexOf('\n'));
        jTextArea1.setText(display);
    }// GEN-LAST:event_jButton6ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (au == path.size()) {
            JOptionPane.showMessageDialog(new JFrame(), "Uploaded Successfully!");
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Does not Uploaded!");
        }
    }// GEN-LAST:event_jButton4ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }// GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        String filena = jTextField2.getText().trim();
        fn3 = filena;

        try {
            int count = 0;
            String disp = "";
            ResultSet rs = st.executeQuery(
                    "select * from UploadDetails where FileName='" + filena + "' and CloudId='" + cloudid + "'");
            while (rs.next()) {
                count = 1;
                String name1 = rs.getString(1);
                String groupno1 = rs.getString(2);
                String filename1 = rs.getString(3);
                String blockname1 = rs.getString(4);
                String cipher = rs.getString(5);
                String sign = rs.getString(6);

                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + blockname1 + "\n------------------------------------------------------------\n" + cipher
                        + "\nSignature: " + sign + "\n\n";
            }
            if (count != 1) {
                JOptionPane.showMessageDialog(new JFrame(), "Invalid File Name!");
            }
            String display = disp.substring(0, disp.lastIndexOf('\n'));
            jTextArea2.setText(display);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        try {
            ResultSet rs = st.executeQuery("select * from KeyDetails where FileName='" + fn3 + "' and GroupNo='"
                    + groupno + "' and CloudId='" + cloudid + "'");
            if (rs.next()) {
                String fne = rs.getString(1); // filename
                String pub = rs.getString(2);
                String priv = rs.getString(3);
                jTextField3.setText(priv);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "You cannot access another group owner Keys!");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        String priv = jTextField3.getText().trim();

        String wf = "";
        try {
            ResultSet rs = st.executeQuery(
                    "select * from UploadDetails where FileName='" + fn3 + "' and CloudId='" + cloudid + "'");
            while (rs.next()) {
                String name1 = rs.getString(1);
                String groupno1 = rs.getString(2);
                String filename1 = rs.getString(3);
                String blockname1 = rs.getString(4);
                String cipher = rs.getString(5);

                String[] s = priv.split(",");
                String d = s[0];
                String n = s[1];

                // Decrypting, M' = C^d mod n

                /* Decrypting cipher */

                String[] cip = cipher.split(",");
                String file = "";
                for (int i = 0; i < cip.length; i++) {
                    String dec = new BigInteger(cip[i]).modPow(new BigInteger(d), new BigInteger(n)).toString();
                    int ascii = Integer.parseInt(dec.trim());
                    char ori = (char) ascii;
                    file = file + ori;
                }
                wf = wf + file;
            }
            jTextArea2.setText(wf);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "Sorry you are Entered Wrong Key!");
            JOptionPane.showMessageDialog(new JFrame(), "You are currently blocked by ur original user!");
            try {
                ResultSet rs1 = st.executeQuery("select * from UserRegister where GroupNo='" + groupno
                        + "' and UserType='" + "Original User" + "' and CloudId='" + cloudid + "'");
                String groupowner = "";
                if (rs1.next()) {
                    String name1 = rs1.getString(3);
                    groupowner = name1;
                }

                ResultSet rs = st.executeQuery(
                        "select * from RevockedUser where UserName='" + name + "' and CloudId='" + cloudid + "'");
                if (rs.next()) {

                } else {
                    st.executeUpdate("insert into RevockedUser values('" + name + "','" + priv + "','" + groupowner
                            + "','" + cloudid + "')");
                }
            } catch (Exception e1) {
                e1.printStackTrace();
            }

            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        String usn = jComboBox1.getSelectedItem().toString();
        try {
            String qry = "delete from RevockedUser where UserName='" + usn + "' and CloudId='" + cloudid + "'";
            st.execute(qry);

            ArrayList temp = new ArrayList();
            for (int i = 0; i < jTable2.getRowCount(); i++) {
                String s = jTable2.getValueAt(i, 0).toString();
                String s1 = jTable2.getValueAt(i, 1).toString();
                if (!(s.equals(usn))) {
                    temp.add(s + "," + s1);
                }
            }

            DefaultTableModel dm = (DefaultTableModel) jTable2.getModel();
            dm.setRowCount(0);

            for (int i = 0; i < temp.size(); i++) {
                String s = temp.get(i).toString();
                String s1[] = s.split(",");
                DefaultTableModel dm1 = (DefaultTableModel) jTable2.getModel();
                Vector v = new Vector();
                v.add(s1[0]);
                v.add(s1[1]);
                dm.addRow(v);
            }
            jComboBox1.removeItem(usn);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        jComboBox1.setSelectedIndex(0);
    }// GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser fc = new JFileChooser();
            int result = fc.showOpenDialog(this);
            if (result == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                jTextField4.setText(file.getName());
                filename = file.getName();
                filepath = file.getAbsolutePath();

                String fname = file.getAbsolutePath();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str = new String(data);
                datafile = str;
                jTextArea3.setText(str);
            } else if (result == JFileChooser.CANCEL_OPTION) {
                JOptionPane.showMessageDialog(this, "Open Command cancelled by user.");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton14ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:

        if (fc != 0) {
            jComboBox3.addItem("<--Select-->");
            for (int i = jComboBox3.getItemCount() - 2; i >= 0; i--) {
                jComboBox3.removeItemAt(i);
            }
            fc1 = 1;
        }
        /*          */

        // jComboBox3.removeAllItems();

        String cid = jComboBox2.getSelectedItem().toString().trim();
        System.out.println("cid: " + cid);
        // jComboBox3.addItem("<--Select-->");
        // jComboBox3.setSelectedIndex(-1);
        try {
            System.out.println("Cloud Id: " + cloudid);
            ResultSet rs = st.executeQuery("select * from GroupsCount where CloudId='" + cid + "'");
            if (rs.next()) {
                String cou = rs.getString(1);
                System.out.println("cou: " + cou);
                int gc = Integer.parseInt(cou.trim());
                for (int i = 0; i < gc; i++) {
                    System.out.println("Here " + i);
                    jComboBox3.addItem(i + 1);
                }
            }
            fc = 1;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jComboBox2ActionPerformed

    private void jComboBox3ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox3ActionPerformed
        // TODO add your handling code here:
        if (fc1 != 0) {
            // jComboBox4.removeAllItems();
            jComboBox4.addItem("<--Select-->");
            for (int i = jComboBox4.getItemCount() - 2; i >= 0; i--) {
                jComboBox4.removeItemAt(i);
            }
        }
        // jComboBox4.removeAllItems();
        // jComboBox4.addItem("<--Select-->");
        // jComboBox3.setSelectedIndex(-1);
        String cid = jComboBox2.getSelectedItem().toString().trim();
        String groupid = jComboBox3.getSelectedItem().toString().trim();
        try {
            System.out.println("Group No: " + groupno + " Cloud Id: " + cloudid);
            ResultSet rs = st.executeQuery(
                    "select * from UserRegister where GroupNo='" + groupid + "' and CloudId='" + cid + "'");
            while (rs.next()) {
                String membname = rs.getString(3);
                System.out.println("membname: " + membname);
                jComboBox4.addItem(membname);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jComboBox3ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        String cid = jComboBox2.getSelectedItem().toString().trim();
        String groupid = jComboBox3.getSelectedItem().toString().trim();
        String membname = jComboBox4.getSelectedItem().toString().trim();

        int size = 32;

        Random rnd = new Random();
        BigInteger p = BigInteger.probablePrime(size / 2, rnd);
        BigInteger q = p.nextProbablePrime();
        BigInteger n = p.multiply(q);
        BigInteger m = (p.subtract(BigInteger.ONE)).multiply(q.subtract(BigInteger.ONE));
        BigInteger e = getCoprime(m);
        BigInteger d = e.modInverse(m);

        System.out.println("p: " + p);
        System.out.println("q: " + q);
        System.out.println("m: " + m);
        System.out.println("Key size: " + n.bitLength());
        System.out.println("Modulus: " + n);
        System.out.println("Public key: " + e);
        System.out.println("Private key: " + d);

        pubkeys = e.toString() + "," + n.toString();
        privkeys = d.toString() + "," + n.toString();

        try {
            ResultSet rs = st.executeQuery("select * from SharingKeyDetails where FileName='" + filename
                    + "' and OwnerName='" + name + "' and GroupNo='" + groupno + "' and CloudId='" + cloudid
                    + "' and DestinationCloudId='" + cid + "' and DestinationGroupNo='" + groupid
                    + "' and DestimemberName='" + membname + "'");
            if (rs.next()) {

            } else {
                st.executeUpdate("insert into SharingKeyDetails values('" + filename + "','" + pubkeys + "','"
                        + privkeys + "','" + name + "','" + groupno + "','" + cloudid + "','" + cid + "','" + groupid
                        + "','" + membname + "')");
            }
        } catch (Exception e1) {
            e1.printStackTrace();
        }
        JOptionPane.showMessageDialog(new JFrame(),
                "Keys are Generated & forward to " + membname + " and public verifier Successfully!");
    }// GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        String pa = filepath;
        split(pa);

        String disp = "";
        try {
            for (int p = 0; p < path.size(); p++) {
                String fname = path.get(p).toString();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str1 = new String(data);
                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + fe.getName() + "\n------------------------------------------------------------\n" + str1
                        + "\n\n";
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String display = disp.substring(0, disp.lastIndexOf('\n'));
        jTextArea3.setText(display);
    }// GEN-LAST:event_jButton16ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        String cid = jComboBox2.getSelectedItem().toString().trim();
        String groupid = jComboBox3.getSelectedItem().toString().trim();
        String membname = jComboBox4.getSelectedItem().toString().trim();

        String disp = "";
        try {
            String[] s = pubkeys.split(",");
            String e = s[0];
            String n = s[1];

            for (int p = 0; p < path.size(); p++) {
                String fname = path.get(p).toString();
                File fe = new File(fname);
                FileInputStream fis = new FileInputStream(fe);
                byte data[] = new byte[fis.available()];
                fis.read(data);
                fis.close();
                String str1 = new String(data);

                String blockname = fe.getName();

                // Encrypt File

                String ce = "";
                char ch[] = str1.toCharArray();
                for (int i = 0; i < ch.length; i++) {
                    char c = ch[i];
                    System.out.println((int) c);
                    BigInteger orig = BigInteger.valueOf((int) c);
                    String ci = orig.modPow(new BigInteger(e), new BigInteger(n)).toString();
                    ce = ce + ci + ",";
                }
                String cipfile = ce.substring(0, ce.lastIndexOf(','));

                // Signature Generation

                Signature sg = new Signature();
                String sign = sg.calculateRFC2104HMAC(str1, "key");
                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + blockname + "\n------------------------------------------------------------\n" + cipfile
                        + "\nSignature: " + sign + "\n\n";

                try {
                    ResultSet rs = st.executeQuery("select * from SharingUploadDetails where BlockName='" + blockname
                            + "' and CloudId='" + cloudid + "'");
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(new JFrame(), "This block is already exists!");
                    } else {
                        st.executeUpdate("insert into SharingUploadDetails values('" + name + "','" + groupno + "','"
                                + filename + "','" + blockname + "','" + cipfile + "','" + sign + "','" + cloudid
                                + "','" + cid + "','" + groupid + "','" + membname + "')");
                        au++;
                    }
                } catch (Exception e1) {
                    e1.printStackTrace();
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        String display = disp.substring(0, disp.lastIndexOf('\n'));
        jTextArea3.setText(display);
    }// GEN-LAST:event_jButton17ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        if (au == path.size()) {
            JOptionPane.showMessageDialog(new JFrame(), "Uploaded Successfully!");
        } else {
            JOptionPane.showMessageDialog(new JFrame(), "Does not Uploaded!");
        }
    }// GEN-LAST:event_jButton18ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        jComboBox2.setSelectedIndex(0);
        jComboBox3.setSelectedIndex(0);
        jComboBox4.setSelectedIndex(0);
        jTextField4.setText("");
        jTextArea3.setText("");
    }// GEN-LAST:event_jButton19ActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton20ActionPerformed
        // TODO add your handling code here:
        String filena = jTextField5.getText().trim();
        fn3 = filena;

        try {
            int count = 0;
            String disp = "";
            ResultSet rs = st.executeQuery("select * from SharingUploadDetails where FileName='" + filena
                    + "' and DestinationCloudId='" + cloudid + "' and DestinationGroupNo='" + groupno + "'");
            while (rs.next()) {
                count = 1;
                String name1 = rs.getString(1);
                gd = rs.getString(2);
                String filename1 = rs.getString(3);
                String blockname1 = rs.getString(4);
                String cipher = rs.getString(5);
                String sign = rs.getString(6);
                cd = rs.getString(7);

                disp = disp
                        + "------------------------------------------------------------\n                                      "
                        + blockname1 + "\n------------------------------------------------------------\n" + cipher
                        + "\nSignature: " + sign + "\n\n";
            }
            if (count != 1) {
                JOptionPane.showMessageDialog(new JFrame(), "You cannot access these file!");
            }
            if (!(disp.equals(""))) {
                String display = disp.substring(0, disp.lastIndexOf('\n'));
                jTextArea4.setText(display);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton20ActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton21ActionPerformed
        // TODO add your handling code here:
        try {
            ResultSet rs = st.executeQuery(
                    "select * from SharingKeyDetails where FileName='" + fn3 + "' and DestinationGroupNo='" + groupno
                            + "' and DestinationCloudId='" + cloudid + "' and DestimemberName='" + name + "'");
            if (rs.next()) {
                String fne = rs.getString(1); // filename
                String pub = rs.getString(2);
                String priv = rs.getString(3);
                jTextField6.setText(priv);
            } else {
                JOptionPane.showMessageDialog(new JFrame(), "You cannot access another group owner Keys!");
                attacker = 1;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }// GEN-LAST:event_jButton21ActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jButton22ActionPerformed
        // TODO add your handling code here:
        String priv = jTextField6.getText().trim();

        if (attacker == 1) {
            JOptionPane.showMessageDialog(new JFrame(), "Sorry you are Entered Wrong Key!");
            JOptionPane.showMessageDialog(new JFrame(), "You are currently blocked by Data Owner!");
            try {
                ResultSet rs1 = st.executeQuery("select * from UserRegister where GroupNo='" + gd + "' and UserType='"
                        + "Original User" + "' and CloudId='" + cd + "'");
                String groupowner = "";
                if (rs1.next()) {
                    String name1 = rs1.getString(3);
                    groupowner = name1;
                }

                ResultSet rs = st.executeQuery(
                        "select * from RevockedUser where UserName='" + name + "' and CloudId='" + cd + "'");
                if (rs.next()) {

                } else {
                    st.executeUpdate("insert into RevockedUser values('" + name + "','" + priv + "','" + groupowner
                            + "','" + cd + "')");
                }
            } catch (Exception e1) {
                e1.printStackTrace();
            }

        } else {
            String wf = "";
            try {
                ResultSet rs = st.executeQuery("select * from SharingUploadDetails where FileName='" + fn3
                        + "' and DestinationCloudId='" + cloudid + "' and DestinationGroupNo='" + groupno
                        + "' and DestimemberName='" + name + "'");
                while (rs.next()) {
                    String name1 = rs.getString(1);
                    String groupno1 = rs.getString(2);
                    String filename1 = rs.getString(3);
                    String blockname1 = rs.getString(4);
                    String cipher = rs.getString(5);
                    String clouid = rs.getString(7);

                    String[] s = priv.split(",");
                    String d = s[0];
                    String n = s[1];

                    // Decrypting, M' = C^d mod n

                    /* Decrypting cipher */

                    String[] cip = cipher.split(",");
                    String file = "";
                    for (int i = 0; i < cip.length; i++) {
                        String dec = new BigInteger(cip[i]).modPow(new BigInteger(d), new BigInteger(n)).toString();
                        int ascii = Integer.parseInt(dec.trim());
                        char ori = (char) ascii;
                        file = file + ori;
                    }
                    wf = wf + file;
                }
                jTextArea4.setText(wf);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }// GEN-LAST:event_jButton22ActionPerformed

    private void jComboBox2ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBox2ItemStateChanged
        // TODO add your handling code here:
        /*
         * String cid=jComboBox2.getSelectedItem().toString().trim();
         * System.out.println("cid: "+cid);
         * for(int i=jComboBox3.getItemCount()-1;i>=0;i--)
         * {
         * jComboBox3.removeItemAt(i);
         * }
         * jComboBox3.addItem("<--Select-->");
         * try
         * {
         * ResultSet
         * rs=st.executeQuery("select * from GroupsCount where CloudId='"+cid+"'");
         * if(rs.next())
         * {
         * String cou=rs.getString(1);
         * System.out.println("cou: "+cou);
         * int gc=Integer.parseInt(cou.trim());
         * for(int i=0;i<gc;i++)
         * {
         * System.out.println("Here "+i);
         * jComboBox3.addItem(i+1);
         * }
         * }
         * }
         * catch(Exception e)
         * {
         * e.printStackTrace();
         * }
         */
    }// GEN-LAST:event_jComboBox2ItemStateChanged

    private void jComboBox4ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jComboBox4ActionPerformed
        // TODO add your handling code here:
    }// GEN-LAST:event_jComboBox4ActionPerformed

    private void jComboBox3ItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jComboBox3ItemStateChanged
        // TODO add your handling code here:
        /*
         * jComboBox4.removeAllItems();
         * jComboBox4.addItem("<--Select-->");
         * String cid=jComboBox2.getSelectedItem().toString().trim();
         * String groupid=jComboBox3.getSelectedItem().toString().trim();
         * try
         * {
         * ResultSet rs=st.executeQuery("select * from UserRegister where GroupNo='"
         * +groupid+"' and CloudId='"+cid+"'");
         * while(rs.next())
         * {
         * String membname=rs.getString(3);
         * jComboBox4.addItem(membname);
         * }
         * }
         * catch(Exception e)
         * {
         * e.printStackTrace();
         * }
         */
    }// GEN-LAST:event_jComboBox3ItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
        // (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the default
         * look and feel.
         * For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        // </editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                // new UserFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JComboBox jComboBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables

    public static BigInteger getCoprime(BigInteger m) {
        Random rnd = new Random();
        int length = m.bitLength() - 1;
        BigInteger e = BigInteger.probablePrime(length, rnd);
        while (!(m.gcd(e)).equals(BigInteger.ONE)) {
            e = BigInteger.probablePrime(length, rnd);
        }
        return e;
    }

    private void split(String pa) {
        try {
            // Reading file and getting no. of files to be generated

            String inputfile = pa.trim(); // file path
            String s = JOptionPane.showInputDialog(new JFrame(), "Enter the Number of files to be generated:");// No. of
                                                                                                               // lines
                                                                                                               // to be
                                                                                                               // split
                                                                                                               // and
                                                                                                               // saved
                                                                                                               // in
                                                                                                               // each
                                                                                                               // output
                                                                                                               // file.
            int nof = Integer.parseInt(s);
            File file = new File(inputfile);
            Scanner scanner = new Scanner(file);
            int count = 0;
            int a = filename.lastIndexOf("."); // fn-file name
            String fi = filename.substring(0, a);
            while (scanner.hasNextLine()) {
                scanner.nextLine();
                count++;
            }
            System.out.println("Lines in the file: " + count); // Displays no. of lines in the input file.

            if (nof <= count) {
                double temp = (count / nof);
                double nol = temp;
                System.out.println("No. of lines to be generated for each file:" + nol); // Displays no. of files to be
                                                                                         // generated.

                // ---------------------------------------------------------------------------------------------------------

                // Actual splitting of file into smaller files

                FileInputStream fstream = new FileInputStream(inputfile);
                DataInputStream in = new DataInputStream(fstream);
                BufferedReader br = new BufferedReader(new InputStreamReader(in));
                String strLine = "";

                for (int j = 1; j <= nof; j++) {
                    if (j == nof) {
                        nol = (count - nol * nof) + nol;
                        System.out.println("Last " + nol);
                    }
                    FileWriter fstream1 = new FileWriter("FILE/" + fi + "" + j + ".txt"); // Destination File Location
                    if (!(path.contains("FILE/" + fi + "" + j + ".txt"))) {
                        path.add("FILE/" + fi + "" + j + ".txt");
                    }
                    BufferedWriter out = new BufferedWriter(fstream1);
                    for (int i = 1; i <= nol; i++) {
                        strLine = br.readLine();
                        if (strLine != null) {
                            out.write(strLine);
                            if (i != nol) {
                                out.newLine();
                            }
                        }
                    }
                    out.close();
                }
                in.close();
            } else {
                JOptionPane.showMessageDialog(new JFrame(),
                        "No of Lines in the file " + count + " So don't ask for too much!");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static class Signature {
        private static final String HMAC_SHA1_ALGORITHM = "HmacSHA1";

        public static String calculateRFC2104HMAC(String data, String key) throws java.security.SignatureException {
            String result;
            try {
                // get an hmac_sha1 key from the raw key bytes
                SecretKeySpec signingKey = new SecretKeySpec(key.getBytes(), HMAC_SHA1_ALGORITHM);

                // get an hmac_sha1 Mac instance and initialize with the signing key
                Mac mac = Mac.getInstance(HMAC_SHA1_ALGORITHM);
                mac.init(signingKey);

                // compute the hmac on input data bytes
                byte[] rawHmac = mac.doFinal(data.getBytes());

                // base64-encode the hmac
                // result = Encoding.EncodeBase64(rawHmac);
                result = new String(encode(rawHmac));
            } catch (Exception e) {
                throw new SignatureException("Failed to generate HMAC : " + e.getMessage());
            }
            return result;
        }

        private static char[] encode(byte[] bytes) {
            final int amount = bytes.length;
            char[] result = new char[2 * amount];

            int j = 0;
            for (int i = 0; i < amount; i++) {
                result[j++] = HEX[(0xF0 & bytes[i]) >>> 4];
                result[j++] = HEX[(0x0F & bytes[i])];
            }
            return result;
        }

        private static final char[] HEX = { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e',
                'f' };
    }
}
